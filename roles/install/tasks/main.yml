---
- name: create prometheus system group
  group:
    name: prometheus
    system: true
    state: present

- name: prometheus User add
  user:
    name: prometheus
    system: true
    shell: "/usr/sbin/nologin"
    group: prometheus
    createhome: false
    home: "{{ prometheus_db_dir }}"

- name: make directory for prometheus
  file:
    path: "{{ prometheus_db_dir }}"
    state: directory
    owner: prometheus
    group: prometheus
    mode: 0755

- block:
    - name: download prometheus package to localhost
      become: false
      get_url:
        url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
        dest: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"

    - name: unpack prometheus binaries
      unarchive:
        src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
        dest: "/tmp"

    - name: copy prometheus and promtool binaries files
      copy:
        src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}"
        dest: "{{ prometheus_binary_install_dir }}/{{ item }}"
        mode: 0755
        owner: root
        group: root
        remote_src: yes
      with_items:
        - prometheus
        - promtool

- name: Make Directory /etc/prometheus
  file:
    path: /etc/prometheus
    state: directory
        
- name: Configuration for Prometheus.yml
  template:
    src: prometheus.yml.j2
    dest: /etc/prometheus/prometheus.yml
    owner: root
    group: root
    mode: 0644

- name: Configuration systemd Files for Prometheus
  template:
    src: prometheus.systemd.j2
    dest: /etc/systemd/system/prometheus.service
    owner: root
    group: root
    mode: 0644
  notify:
    - restart prometheus

      #- name: reload for Prometheus
      #service:
      #name: prometheus
      #state: reloaded

- name: Check Port 9090 for Prometheus
  shell:
    cmd: "/usr/bin/curl --connect-timeout 10 --silent --show-error '{{ prometheus_ip }}':9090"
    warn: no
    executable: /bin/bash
  register: check_port

- name: Check port 9090 resule 
  debug:
    msg:
      - "{{ check_port.stdout }}"
